// <auto-generated />
using System;
using CiuchApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CiuchApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190205150910_add CnCode to Group")]
    partial class addCnCodetoGroup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CiuchApp.DataAccess.AspNetIdentity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CiuchApp.Domain.BusinessTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<int>("CountryId");

                    b.Property<int>("CurrencyId");

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<string>("ImageName");

                    b.Property<int>("SeasonId");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SeasonId");

                    b.ToTable("BusinessTrips");
                });

            modelBuilder.Entity("CiuchApp.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new { Id = 1, Name = "Wólka Kosowska" },
                        new { Id = 2, Name = "Paryż" },
                        new { Id = 3, Name = "Birnimgham" },
                        new { Id = 4, Name = "Madryt" },
                        new { Id = 5, Name = "Prato" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.CodeCn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CodeCns");

                    b.HasData(
                        new { Id = 1, Name = "QWERT" },
                        new { Id = 2, Name = "ASDFG" },
                        new { Id = 3, Name = "YUIO" },
                        new { Id = 4, Name = "VBNM" },
                        new { Id = 5, Name = "LKJHGF" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new { Id = 1, Name = "KLAM212" },
                        new { Id = 2, Name = "OWTR20" },
                        new { Id = 3, Name = "BLEW32" },
                        new { Id = 4, Name = "KKE2111" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.ColorName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ColorNames");

                    b.HasData(
                        new { Id = 1, Name = "Zielony" },
                        new { Id = 2, Name = "Biały" },
                        new { Id = 3, Name = "Czarny" },
                        new { Id = 4, Name = "Niebieski" },
                        new { Id = 5, Name = "Żółty" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Components");

                    b.HasData(
                        new { Id = 1, Name = "100% Bawełna" },
                        new { Id = 2, Name = "98% Bawełna, 2 Poliester" },
                        new { Id = 3, Name = "100% Poliester" },
                        new { Id = 4, Name = "90% Poliester, 10% Elastan" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new { Id = 1, Name = "Polska" },
                        new { Id = 2, Name = "Hiszpania" },
                        new { Id = 3, Name = "Włochy" },
                        new { Id = 4, Name = "Wielka Brytania" },
                        new { Id = 5, Name = "Francja" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.CountryOfOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CountryOfOrigin");

                    b.HasData(
                        new { Id = 1, Name = "Chiny" },
                        new { Id = 2, Name = "Włochy" },
                        new { Id = 3, Name = "Bangladesz" },
                        new { Id = 4, Name = "Turcja" },
                        new { Id = 5, Name = "Polska" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new { Id = 1, Name = "PLN" },
                        new { Id = 2, Name = "EURO" },
                        new { Id = 3, Name = "FUNT" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CnCode");

                    b.Property<string>("GroupCode");

                    b.Property<string>("ImageName");

                    b.Property<int>("MainCategoryId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("Groups");

                    b.HasData(
                        new { Id = 1, CnCode = "6212900000", GroupCode = "BI", MainCategoryId = 1, Name = "Body" },
                        new { Id = 2, CnCode = "6208920000", GroupCode = "BI", MainCategoryId = 1, Name = "Inne" },
                        new { Id = 3, CnCode = "6112319000", GroupCode = "BI", MainCategoryId = 1, Name = "Kąpielówki" },
                        new { Id = 4, CnCode = "6208920000", GroupCode = "BI", MainCategoryId = 1, Name = "Szlafroki" },
                        new { Id = 5, CnCode = "6212900000", GroupCode = "BI", MainCategoryId = 1, Name = "Wyszczuplająca" },
                        new { Id = 6, CnCode = "", GroupCode = "BU", MainCategoryId = 2, Name = "Z długim rękawem" },
                        new { Id = 7, CnCode = "6110309900", GroupCode = "BL", MainCategoryId = 3, Name = "Przez głowę" },
                        new { Id = 8, CnCode = "6110309900", GroupCode = "BL", MainCategoryId = 3, Name = "Rozpinane" },
                        new { Id = 9, CnCode = "6204623990", GroupCode = "SJ", MainCategoryId = 4, Name = "Jeansy" },
                        new { Id = 10, CnCode = "6211439000", GroupCode = "SK", MainCategoryId = 5, Name = "Kombinezony" },
                        new { Id = 11, CnCode = "6112110000", GroupCode = "DK", MainCategoryId = 6, Name = "Dresy" },
                        new { Id = 12, CnCode = "6104230000", GroupCode = "DK", MainCategoryId = 6, Name = "Komplety" },
                        new { Id = 13, CnCode = "", GroupCode = "KD", MainCategoryId = 7, Name = "Z długim rękawem" },
                        new { Id = 14, CnCode = "6206300090", GroupCode = "KK", MainCategoryId = 7, Name = "Z krótkim rękawem" },
                        new { Id = 15, CnCode = "6202930000", GroupCode = "KU", MainCategoryId = 8, Name = "Bezrękawniki" },
                        new { Id = 16, CnCode = "6202930000", GroupCode = "KU", MainCategoryId = 8, Name = "Kurtki długie" },
                        new { Id = 17, CnCode = "6202930000", GroupCode = "KU", MainCategoryId = 8, Name = "Kurtki krótkie" },
                        new { Id = 18, CnCode = "", GroupCode = "KP", MainCategoryId = 8, Name = "Płaszcze" },
                        new { Id = 19, CnCode = "6202930000", GroupCode = "KU", MainCategoryId = 8, Name = "Poncha" },
                        new { Id = 20, CnCode = "6203120000", GroupCode = "KZ", MainCategoryId = 9, Name = "Garnitury" },
                        new { Id = 21, CnCode = "6211324100", GroupCode = "KZ", MainCategoryId = 9, Name = "Kamizelki" },
                        new { Id = 22, CnCode = "6203339000", GroupCode = "KZ", MainCategoryId = 9, Name = "Marynarki" },
                        new { Id = 23, CnCode = "", GroupCode = "MT", MainCategoryId = 10, Name = "Materiały" },
                        new { Id = 24, CnCode = "", GroupCode = "ML", MainCategoryId = 10, Name = "Metki" },
                        new { Id = 25, CnCode = "", GroupCode = "ON", MainCategoryId = 11, Name = "Odzież niemowlęca" },
                        new { Id = 26, CnCode = "6211200090", GroupCode = "KU", MainCategoryId = 12, Name = "Kombinezony" },
                        new { Id = 27, CnCode = "6210500000", GroupCode = "KU", MainCategoryId = 12, Name = "Kurtki" },
                        new { Id = 28, CnCode = "6210500000", GroupCode = "SP", MainCategoryId = 12, Name = "Spodnie" },
                        new { Id = 29, CnCode = "6104530000", GroupCode = "SD", MainCategoryId = 13, Name = "Maxi" },
                        new { Id = 30, CnCode = "6104530000", GroupCode = "SD", MainCategoryId = 13, Name = "Midi" },
                        new { Id = 31, CnCode = "6104530000", GroupCode = "SD", MainCategoryId = 13, Name = "Mini" },
                        new { Id = 32, CnCode = "6204623990", GroupCode = "SP", MainCategoryId = 14, Name = "Casual (na co dzień)" },
                        new { Id = 33, CnCode = "6203423500", GroupCode = "SP", MainCategoryId = 14, Name = "Eleganckie" },
                        new { Id = 34, CnCode = "6204623990", GroupCode = "SP", MainCategoryId = 14, Name = "Sportowe" },
                        new { Id = 35, CnCode = "", GroupCode = "SP", MainCategoryId = 15, Name = "Casual (na co dzień)" },
                        new { Id = 36, CnCode = "", GroupCode = "SP", MainCategoryId = 15, Name = "Eleganckie" },
                        new { Id = 37, CnCode = "", GroupCode = "LG", MainCategoryId = 15, Name = "Legginsy" },
                        new { Id = 38, CnCode = "", GroupCode = "SP", MainCategoryId = 15, Name = "Sportowe" },
                        new { Id = 39, CnCode = "6112419000", GroupCode = "BI", MainCategoryId = 16, Name = "Stroje kąpielowe" },
                        new { Id = 40, CnCode = "6204430000", GroupCode = "SU", MainCategoryId = 17, Name = "Casual (na co dzień)" },
                        new { Id = 41, CnCode = "6204430000", GroupCode = "SU", MainCategoryId = 17, Name = "Eleganckie" },
                        new { Id = 42, CnCode = "6110309900", GroupCode = "SW", MainCategoryId = 18, Name = "Przez głowę" },
                        new { Id = 43, CnCode = "6110309900", GroupCode = "SW", MainCategoryId = 18, Name = "Rozpinane" },
                        new { Id = 44, CnCode = "6204639090", GroupCode = "SZ", MainCategoryId = 19, Name = "Casual (na co dzień)" },
                        new { Id = 45, CnCode = "6204639090", GroupCode = "SZ", MainCategoryId = 19, Name = "Eleganckie" },
                        new { Id = 46, CnCode = "6204639090", GroupCode = "SZ", MainCategoryId = 19, Name = "Sportowe" },
                        new { Id = 47, CnCode = "6109100090", GroupCode = "TS", MainCategoryId = 20, Name = "Bez rękawów" },
                        new { Id = 48, CnCode = "6105100000", GroupCode = "PO", MainCategoryId = 20, Name = "Polo" },
                        new { Id = 49, CnCode = "6109100010", GroupCode = "TS", MainCategoryId = 20, Name = "T-shirty" },
                        new { Id = 50, CnCode = "6109100090", GroupCode = "BU", MainCategoryId = 20, Name = "Z długim rękawem" },
                        new { Id = 51, CnCode = "6109902000", GroupCode = "TS", MainCategoryId = 21, Name = "Bez rękawów" },
                        new { Id = 52, CnCode = "6109902000", GroupCode = "TS", MainCategoryId = 21, Name = "Z krótkim rękawem" },
                        new { Id = 53, CnCode = "6204339000", GroupCode = "KZ", MainCategoryId = 22, Name = "Casual (na co dzień)" },
                        new { Id = 54, CnCode = "6204339000", GroupCode = "KZ", MainCategoryId = 22, Name = "Eleganckie" },
                        new { Id = 55, CnCode = "6211324100", GroupCode = "KZ", MainCategoryId = 22, Name = "Kamizelki" },
                        new { Id = 56, CnCode = "", GroupCode = "OB", MainCategoryId = 23, Name = "Baleriny" },
                        new { Id = 57, CnCode = "", GroupCode = "OB", MainCategoryId = 24, Name = "Casual (na co dzień)" },
                        new { Id = 58, CnCode = "", GroupCode = "OB", MainCategoryId = 24, Name = "Eleganckie" },
                        new { Id = 59, CnCode = "", GroupCode = "OD", MainCategoryId = 25, Name = "Kozaki" },
                        new { Id = 60, CnCode = "", GroupCode = "OB", MainCategoryId = 26, Name = "Kalosze" },
                        new { Id = 61, CnCode = "", GroupCode = "KL", MainCategoryId = 27, Name = "Japonki" },
                        new { Id = 62, CnCode = "", GroupCode = "KL", MainCategoryId = 27, Name = "Klapki" },
                        new { Id = 63, CnCode = "", GroupCode = "OB", MainCategoryId = 27, Name = "Koturny i espadryle" },
                        new { Id = 64, CnCode = "", GroupCode = "OB", MainCategoryId = 27, Name = "Sandały" },
                        new { Id = 65, CnCode = "", GroupCode = "OB", MainCategoryId = 28, Name = "Botki" },
                        new { Id = 66, CnCode = "", GroupCode = "OB", MainCategoryId = 28, Name = "Kozaki" },
                        new { Id = 67, CnCode = "", GroupCode = "OB", MainCategoryId = 28, Name = "Oficerki" },
                        new { Id = 68, CnCode = "", GroupCode = "OB", MainCategoryId = 28, Name = "Śniegowce" },
                        new { Id = 69, CnCode = "", GroupCode = "OB", MainCategoryId = 29, Name = "Casual (na co dzień)" },
                        new { Id = 70, CnCode = "", GroupCode = "OB", MainCategoryId = 29, Name = "Mokasyny" },
                        new { Id = 71, CnCode = "", GroupCode = "OB", MainCategoryId = 29, Name = "Półbuty" },
                        new { Id = 72, CnCode = "", GroupCode = "OB", MainCategoryId = 29, Name = "Wizytowe" },
                        new { Id = 73, CnCode = "", GroupCode = "OB", MainCategoryId = 30, Name = "Outdoor" },
                        new { Id = 74, CnCode = "", GroupCode = "OB", MainCategoryId = 30, Name = "Sandały" },
                        new { Id = 75, CnCode = "", GroupCode = "OB", MainCategoryId = 31, Name = "Lifestyle" },
                        new { Id = 76, CnCode = "", GroupCode = "OB", MainCategoryId = 31, Name = "Sportowe" },
                        new { Id = 77, CnCode = "", GroupCode = "OB", MainCategoryId = 32, Name = "Czółenka" },
                        new { Id = 78, CnCode = "", GroupCode = "OB", MainCategoryId = 32, Name = "Peep toe" },
                        new { Id = 79, CnCode = "", GroupCode = "OB", MainCategoryId = 32, Name = "Sandały na obcasie" },
                        new { Id = 80, CnCode = "", GroupCode = "OB", MainCategoryId = 32, Name = "Szpilki" },
                        new { Id = 81, CnCode = "", GroupCode = "OB", MainCategoryId = 33, Name = "Niskie" },
                        new { Id = 82, CnCode = "", GroupCode = "OB", MainCategoryId = 33, Name = "Wysokie" },
                        new { Id = 83, CnCode = "", GroupCode = "OB", MainCategoryId = 34, Name = "Zimowe" },
                        new { Id = 84, CnCode = "6212109000", GroupCode = "BI", MainCategoryId = 35, Name = "Biustonosze" },
                        new { Id = 85, CnCode = "6107110000", GroupCode = "BI", MainCategoryId = 35, Name = "Bokserki" },
                        new { Id = 86, CnCode = "6107110000", GroupCode = "BI", MainCategoryId = 35, Name = "Kalesony" },
                        new { Id = 87, CnCode = "6212101000", GroupCode = "BI", MainCategoryId = 35, Name = "Komplety" },
                        new { Id = 88, CnCode = "6109100000", GroupCode = "BI", MainCategoryId = 35, Name = "Koszulki" },
                        new { Id = 89, CnCode = "6108210000", GroupCode = "BI", MainCategoryId = 35, Name = "Majtki" },
                        new { Id = 90, CnCode = "6212200000", GroupCode = "AK", MainCategoryId = 35, Name = "Pasy do pończoch" },
                        new { Id = 91, CnCode = "6108310000", GroupCode = "BI", MainCategoryId = 35, Name = "Piżamy" },
                        new { Id = 92, CnCode = "6107110000", GroupCode = "BI", MainCategoryId = 35, Name = "Slipy" },
                        new { Id = 93, CnCode = "7117900000", GroupCode = "AK", MainCategoryId = 36, Name = "Biżuteria" },
                        new { Id = 94, CnCode = "7117900000", GroupCode = "AK", MainCategoryId = 36, Name = "Bransoletki" },
                        new { Id = 95, CnCode = "7326909890", GroupCode = "AK", MainCategoryId = 36, Name = "Breloki" },
                        new { Id = 96, CnCode = "", GroupCode = "AK", MainCategoryId = 36, Name = "Broszki" },
                        new { Id = 97, CnCode = "7117900000", GroupCode = "AK", MainCategoryId = 36, Name = "Inne" },
                        new { Id = 98, CnCode = "7117900000", GroupCode = "AK", MainCategoryId = 36, Name = "Kolczyki" },
                        new { Id = 99, CnCode = "7117900000", GroupCode = "AK", MainCategoryId = 36, Name = "Naszyjniki" },
                        new { Id = 100, CnCode = "9615190000", GroupCode = "AK", MainCategoryId = 36, Name = "Ozdoby do włosów" },
                        new { Id = 101, CnCode = "7117900000", GroupCode = "AK", MainCategoryId = 36, Name = "Pierścionki" },
                        new { Id = 102, CnCode = "6505003000", GroupCode = "CA", MainCategoryId = 37, Name = "Czapki z daszkiem" },
                        new { Id = 103, CnCode = "6505009090", GroupCode = "CA", MainCategoryId = 37, Name = "Czapki zimowe" },
                        new { Id = 104, CnCode = "6505009090", GroupCode = "CA", MainCategoryId = 37, Name = "Kapelusze" },
                        new { Id = 105, CnCode = "6505009090", GroupCode = "CA", MainCategoryId = 37, Name = "Kaszkiety i berety" },
                        new { Id = 106, CnCode = "", GroupCode = "AK", MainCategoryId = 38, Name = "Autorskie grafiki" },
                        new { Id = 107, CnCode = "", GroupCode = "AK", MainCategoryId = 38, Name = "Elektronika" },
                        new { Id = 108, CnCode = "4202990090", GroupCode = "RO", MainCategoryId = 38, Name = "Inne" },
                        new { Id = 109, CnCode = "4202921100", GroupCode = "AK", MainCategoryId = 38, Name = "Kosmetyczki" },
                        new { Id = 110, CnCode = "4202990090", GroupCode = "AK", MainCategoryId = 38, Name = "Pokrowce" },
                        new { Id = 111, CnCode = "6302600000", GroupCode = "AK", MainCategoryId = 38, Name = "Ręczniki" },
                        new { Id = 112, CnCode = "3304990000", GroupCode = "AK", MainCategoryId = 39, Name = "Do ciała" },
                        new { Id = 113, CnCode = "3304990000", GroupCode = "AK", MainCategoryId = 39, Name = "Do makijażu" },
                        new { Id = 114, CnCode = "3304300000", GroupCode = "AK", MainCategoryId = 39, Name = "Do paznokci" },
                        new { Id = 115, CnCode = "3304990000", GroupCode = "AK", MainCategoryId = 39, Name = "Do twarzy" },
                        new { Id = 116, CnCode = "3305900000", GroupCode = "AK", MainCategoryId = 39, Name = "Do włosów" },
                        new { Id = 117, CnCode = "6215200000", GroupCode = "AK", MainCategoryId = 40, Name = "Krawaty" },
                        new { Id = 118, CnCode = "6215200000", GroupCode = "AK", MainCategoryId = 40, Name = "Muchy" },
                        new { Id = 119, CnCode = "6217100090", GroupCode = "AK", MainCategoryId = 40, Name = "Poszetki" },
                        new { Id = 120, CnCode = "4901990000", GroupCode = "AK", MainCategoryId = 41, Name = "Książki i albumy" },
                        new { Id = 121, CnCode = "9004109100", GroupCode = "OK", MainCategoryId = 42, Name = "Okulary" },
                        new { Id = 122, CnCode = "6601999000", GroupCode = "AK", MainCategoryId = 43, Name = "Parasole" },
                        new { Id = 123, CnCode = "3926200000", GroupCode = "PA", MainCategoryId = 44, Name = "Paski" },
                        new { Id = 124, CnCode = "6307909899", GroupCode = "AK", MainCategoryId = 45, Name = "Inne" },
                        new { Id = 125, CnCode = "3405100000", GroupCode = "AK", MainCategoryId = 45, Name = "Pasty i impregnaty" },
                        new { Id = 126, CnCode = "9603909100", GroupCode = "AK", MainCategoryId = 45, Name = "Szczotki i czyściki" },
                        new { Id = 127, CnCode = "6406909090", GroupCode = "AK", MainCategoryId = 45, Name = "Wkładki" },
                        new { Id = 128, CnCode = "4202929190", GroupCode = "PK", MainCategoryId = 46, Name = "Plecaki" },
                        new { Id = 129, CnCode = "4202321000", GroupCode = "PF", MainCategoryId = 47, Name = "Portfele" },
                        new { Id = 130, CnCode = "6115301900", GroupCode = "LG", MainCategoryId = 48, Name = "Pończochy" },
                        new { Id = 131, CnCode = "6115220000", GroupCode = "LG", MainCategoryId = 48, Name = "Rajstopy" },
                        new { Id = 132, CnCode = "6115969900", GroupCode = "LG", MainCategoryId = 48, Name = "Skarpetki" },
                        new { Id = 133, CnCode = "6116930000", GroupCode = "RE", MainCategoryId = 49, Name = "Rękawiczki" },
                        new { Id = 134, CnCode = "", GroupCode = "AK", MainCategoryId = 50, Name = "Rowery" },
                        new { Id = 135, CnCode = "6115969900", GroupCode = "LG", MainCategoryId = 51, Name = "Skarpety" },
                        new { Id = 136, CnCode = "8518309590", GroupCode = "AK", MainCategoryId = 52, Name = "Słuchawki" },
                        new { Id = 137, CnCode = "", GroupCode = "AK", MainCategoryId = 53, Name = "Rękawiczki" },
                        new { Id = 138, CnCode = "6117100000", GroupCode = "SA", MainCategoryId = 54, Name = "Chusty" },
                        new { Id = 139, CnCode = "6117100000", GroupCode = "SA", MainCategoryId = 54, Name = "Kominy" },
                        new { Id = 140, CnCode = "6117100000", GroupCode = "SA", MainCategoryId = 54, Name = "Szale" },
                        new { Id = 141, CnCode = "6117100000", GroupCode = "SA", MainCategoryId = 54, Name = "Szaliki" },
                        new { Id = 142, CnCode = "4202121100", GroupCode = "TO", MainCategoryId = 55, Name = "Na laptopa" },
                        new { Id = 143, CnCode = "4202121900", GroupCode = "TO", MainCategoryId = 55, Name = "Torby" },
                        new { Id = 144, CnCode = "4202121900", GroupCode = "TO", MainCategoryId = 55, Name = "Walizki" },
                        new { Id = 145, CnCode = "4202221000", GroupCode = "TO", MainCategoryId = 56, Name = "Casual (na co dzień)" },
                        new { Id = 146, CnCode = "4202221000", GroupCode = "TO", MainCategoryId = 56, Name = "Eleganckie" },
                        new { Id = 147, CnCode = "9102110000", GroupCode = "AK", MainCategoryId = 57, Name = "Zegarki" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.MainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("TopCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("TopCategoryId");

                    b.ToTable("MainCategories");

                    b.HasData(
                        new { Id = 1, Name = "Bielizna", TopCategoryId = 1 },
                        new { Id = 2, Name = "Bluzki", TopCategoryId = 1 },
                        new { Id = 3, Name = "Bluzy", TopCategoryId = 1 },
                        new { Id = 4, Name = "Jeansy", TopCategoryId = 1 },
                        new { Id = 5, Name = "Kombinezony", TopCategoryId = 1 },
                        new { Id = 6, Name = "Komplety i dresy", TopCategoryId = 1 },
                        new { Id = 7, Name = "Koszule", TopCategoryId = 1 },
                        new { Id = 8, Name = "Kurtki i płaszcze", TopCategoryId = 1 },
                        new { Id = 9, Name = "Marynarki i garnitury", TopCategoryId = 1 },
                        new { Id = 10, Name = "Materiały", TopCategoryId = 1 },
                        new { Id = 11, Name = "Odzież niemowlęca", TopCategoryId = 1 },
                        new { Id = 12, Name = "Snowboard", TopCategoryId = 1 },
                        new { Id = 13, Name = "Spódnice", TopCategoryId = 1 },
                        new { Id = 14, Name = "Spodnie", TopCategoryId = 1 },
                        new { Id = 15, Name = "Spodnie i legginsy", TopCategoryId = 1 },
                        new { Id = 16, Name = "Stroje kąpielowe", TopCategoryId = 1 },
                        new { Id = 17, Name = "Sukienki i tuniki", TopCategoryId = 1 },
                        new { Id = 18, Name = "Swetry", TopCategoryId = 1 },
                        new { Id = 19, Name = "Szorty", TopCategoryId = 1 },
                        new { Id = 20, Name = "T-shirty i polo", TopCategoryId = 1 },
                        new { Id = 21, Name = "Topy", TopCategoryId = 1 },
                        new { Id = 22, Name = "Żakiety", TopCategoryId = 1 },
                        new { Id = 23, Name = "Baleriny", TopCategoryId = 2 },
                        new { Id = 24, Name = "Buty wysokie", TopCategoryId = 2 },
                        new { Id = 25, Name = "Dziecko", TopCategoryId = 2 },
                        new { Id = 26, Name = "Kalosze", TopCategoryId = 2 },
                        new { Id = 27, Name = "Klapki i sandały", TopCategoryId = 2 },
                        new { Id = 28, Name = "Kozaki i botki", TopCategoryId = 2 },
                        new { Id = 29, Name = "Mokasyny i półbuty", TopCategoryId = 2 },
                        new { Id = 30, Name = "Outdoor", TopCategoryId = 2 },
                        new { Id = 31, Name = "Sportowe i lifestyle", TopCategoryId = 2 },
                        new { Id = 32, Name = "Szpilki", TopCategoryId = 2 },
                        new { Id = 33, Name = "Trampki i tenisówki", TopCategoryId = 2 },
                        new { Id = 34, Name = "Zimowe", TopCategoryId = 2 },
                        new { Id = 35, Name = "Bielizna", TopCategoryId = 3 },
                        new { Id = 36, Name = "Biżuteria", TopCategoryId = 3 },
                        new { Id = 37, Name = "Czapki i kapelusze", TopCategoryId = 3 },
                        new { Id = 38, Name = "Gadżety i akcesoria", TopCategoryId = 3 },
                        new { Id = 39, Name = "Kosmetyki", TopCategoryId = 3 },
                        new { Id = 40, Name = "Krawaty i muchy", TopCategoryId = 3 },
                        new { Id = 41, Name = "Książki i albumy", TopCategoryId = 3 },
                        new { Id = 42, Name = "Okulary", TopCategoryId = 3 },
                        new { Id = 43, Name = "Parasole", TopCategoryId = 3 },
                        new { Id = 44, Name = "Paski", TopCategoryId = 3 },
                        new { Id = 45, Name = "Pielęgnacja obuwia", TopCategoryId = 3 },
                        new { Id = 46, Name = "Plecaki", TopCategoryId = 3 },
                        new { Id = 47, Name = "Portfele", TopCategoryId = 3 },
                        new { Id = 48, Name = "Rajstopy i skarpetki", TopCategoryId = 3 },
                        new { Id = 49, Name = "Rękawiczki", TopCategoryId = 3 },
                        new { Id = 50, Name = "Rowery", TopCategoryId = 3 },
                        new { Id = 51, Name = "Skarpety", TopCategoryId = 3 },
                        new { Id = 52, Name = "Słuchawki", TopCategoryId = 3 },
                        new { Id = 53, Name = "Snowboard", TopCategoryId = 3 },
                        new { Id = 54, Name = "Szaliki i chusty", TopCategoryId = 3 },
                        new { Id = 55, Name = "Torby i walizki", TopCategoryId = 3 },
                        new { Id = 56, Name = "Torebki", TopCategoryId = 3 },
                        new { Id = 57, Name = "Zegarki", TopCategoryId = 3 }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Piece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessTripId");

                    b.Property<double>("BuyPrice");

                    b.Property<int>("CodeCnId");

                    b.Property<int>("ColorId");

                    b.Property<int>("ColorNameId");

                    b.Property<int>("ComponentId");

                    b.Property<int>("CountryOfOriginId");

                    b.Property<DateTime>("EstimatedDateOfShipment");

                    b.Property<DateTime>("EstimatedTimeOfDelivery");

                    b.Property<int>("GroupId");

                    b.Property<string>("ImageName");

                    b.Property<int>("MainCategoryId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("SellPrice");

                    b.Property<int>("SetId");

                    b.Property<int?>("SizeId");

                    b.Property<int>("SupplierId");

                    b.Property<int>("TopCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTripId");

                    b.HasIndex("CodeCnId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ColorNameId");

                    b.HasIndex("ComponentId");

                    b.HasIndex("CountryOfOriginId");

                    b.HasIndex("GroupId");

                    b.HasIndex("MainCategoryId");

                    b.HasIndex("SetId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TopCategoryId");

                    b.ToTable("Pieces");
                });

            modelBuilder.Entity("CiuchApp.Domain.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Seasons");

                    b.HasData(
                        new { Id = 1, Name = "WW18" },
                        new { Id = 2, Name = "WP18" },
                        new { Id = 3, Name = "WW19" },
                        new { Id = 4, Name = "WP19" },
                        new { Id = 5, Name = "WW20" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Sets");

                    b.HasData(
                        new { Id = 1, Name = "Adventure Explorer" },
                        new { Id = 2, Name = "Animal Instinct" },
                        new { Id = 3, Name = "Advanced Retailer" },
                        new { Id = 4, Name = "Braveheart Warior" },
                        new { Id = 5, Name = "Elegant Summer" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new { Id = 1, Name = "XS" },
                        new { Id = 2, Name = "S" },
                        new { Id = 3, Name = "M" },
                        new { Id = 4, Name = "L" },
                        new { Id = 5, Name = "XL" },
                        new { Id = 6, Name = "S/M" },
                        new { Id = 7, Name = "M/L" },
                        new { Id = 8, Name = "36" },
                        new { Id = 9, Name = "37" },
                        new { Id = 10, Name = "37" },
                        new { Id = 11, Name = "39" },
                        new { Id = 12, Name = "40" },
                        new { Id = 13, Name = "41" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.SizeAmountPair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<string>("ImageName");

                    b.Property<int>("PieceId");

                    b.Property<int>("SizeId");

                    b.HasKey("Id");

                    b.HasIndex("PieceId");

                    b.HasIndex("SizeId");

                    b.ToTable("SizeAmountPairs");
                });

            modelBuilder.Entity("CiuchApp.Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new { Id = 1, Name = "Alvaro" },
                        new { Id = 2, Name = "La Casa del Papel" },
                        new { Id = 3, Name = "Ing Ung Wang" },
                        new { Id = 4, Name = "Neapolitana" }
                    );
                });

            modelBuilder.Entity("CiuchApp.Domain.TopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TopCategories");

                    b.HasData(
                        new { Id = 1, Name = "Odzież" },
                        new { Id = 2, Name = "Obuwie" },
                        new { Id = 3, Name = "Akcesoria" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CiuchApp.Domain.BusinessTrip", b =>
                {
                    b.HasOne("CiuchApp.Domain.City", "City")
                        .WithMany("BusinessTrips")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Country", "Country")
                        .WithMany("BusinessTrips")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Currency", "Currency")
                        .WithMany("BusinessTrips")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Season", "Season")
                        .WithMany("BusinessTrips")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CiuchApp.Domain.Group", b =>
                {
                    b.HasOne("CiuchApp.Domain.MainCategory", "MainCategory")
                        .WithMany("Groups")
                        .HasForeignKey("MainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CiuchApp.Domain.MainCategory", b =>
                {
                    b.HasOne("CiuchApp.Domain.TopCategory", "TopCategory")
                        .WithMany("MainCategories")
                        .HasForeignKey("TopCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CiuchApp.Domain.Piece", b =>
                {
                    b.HasOne("CiuchApp.Domain.BusinessTrip", "BusinessTrip")
                        .WithMany("Pieces")
                        .HasForeignKey("BusinessTripId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.CodeCn", "CodeCn")
                        .WithMany("Pieces")
                        .HasForeignKey("CodeCnId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Color", "Color")
                        .WithMany("Pieces")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.ColorName", "ColorName")
                        .WithMany("Pieces")
                        .HasForeignKey("ColorNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Component", "Component")
                        .WithMany("Pieces")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.CountryOfOrigin", "CountryOfOrigin")
                        .WithMany("Pieces")
                        .HasForeignKey("CountryOfOriginId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Group", "Group")
                        .WithMany("Pieces")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CiuchApp.Domain.MainCategory", "MainCategory")
                        .WithMany("Pieces")
                        .HasForeignKey("MainCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CiuchApp.Domain.Set", "Set")
                        .WithMany("Pieces")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Size")
                        .WithMany("Pieces")
                        .HasForeignKey("SizeId");

                    b.HasOne("CiuchApp.Domain.Supplier", "Supplier")
                        .WithMany("Pieces")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.TopCategory", "TopCategory")
                        .WithMany("Pieces")
                        .HasForeignKey("TopCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CiuchApp.Domain.SizeAmountPair", b =>
                {
                    b.HasOne("CiuchApp.Domain.Piece", "Piece")
                        .WithMany("SizeAmountPairs")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.Domain.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CiuchApp.DataAccess.AspNetIdentity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CiuchApp.DataAccess.AspNetIdentity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiuchApp.DataAccess.AspNetIdentity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CiuchApp.DataAccess.AspNetIdentity.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
